name: Deploy Maven Artifacts to GitHub Pages

on:
  release:
    types: [published]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Get release version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Set version in pom.xml
      run: |
        mvn versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
        mvn versions:commit

    - name: Build native dependencies
      run: |
        chmod +x ./libs/JHiGHS/scripts/build-native.sh
        ./libs/JHiGHS/scripts/build-native.sh

    - name: Build and install JHiGHS
      working-directory: libs/JHiGHS
      run: |
        mvn clean package
        mvn install:install-file \
          -Dfile=target/jhighs-${{ steps.get_version.outputs.VERSION }}.jar \
          -DgroupId=nl.jessenagel.optimization \
          -DartifactId=jhighs \
          -Dversion=${{ steps.get_version.outputs.VERSION }} \
          -Dpackaging=jar \
          -DgeneratePom=true

    - name: Build and install Orchestrate
      working-directory: libs/Orchestrate
      run: |
        mvn clean package
        mvn install:install-file \
          -Dfile=target/orchestrate-${{ steps.get_version.outputs.VERSION }}.jar \
          -DgroupId=nl.jessenagel.optimization \
          -DartifactId=orchestrate \
          -Dversion=${{ steps.get_version.outputs.VERSION }} \
          -Dpackaging=jar \
          -DgeneratePom=true

    - name: Create Maven repository structure
      run: mkdir -p maven-repo

    - name: Deploy JHiGHS to local repository
      working-directory: libs/JHiGHS
      run: |
        mvn deploy \
          -DaltDeploymentRepository=local::default::file://$(pwd)/../../maven-repo \
          -DskipTests

    - name: Deploy Orchestrate to local repository
      working-directory: libs/Orchestrate
      run: |
        mvn deploy \
          -DaltDeploymentRepository=local::default::file://$(pwd)/../../maven-repo \
          -DskipTests

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Create index.html for repository
      run: |
        cat > maven-repo/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Jesse Nagel's Maven Repository</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .artifact { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
                code { background: #f4f4f4; padding: 2px 5px; border-radius: 3px; }
                pre { background: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }
            </style>
        </head>
        <body>
            <h1>Jesse Nagel's Maven Repository</h1>
            <p>To use this repository, add the following to your <code>pom.xml</code>:</p>
            
            <pre><code>&lt;repositories&gt;
            &lt;repository&gt;
                &lt;id&gt;jessenagel-repo&lt;/id&gt;
                &lt;name&gt;Jesse Nagel's Maven Repository&lt;/name&gt;
                &lt;url&gt;https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/&lt;/url&gt;
            &lt;/repository&gt;
        &lt;/repositories&gt;</code></pre>

            <h2>Available Artifacts</h2>
            
            <div class="artifact">
                <h3>JHiGHS</h3>
                <p>Java bindings for the HiGHS optimization solver</p>
                <pre><code>&lt;dependency&gt;
            &lt;groupId&gt;nl.jessenagel.optimization&lt;/groupId&gt;
            &lt;artifactId&gt;jhighs&lt;/artifactId&gt;
            &lt;version&gt;${{ steps.get_version.outputs.VERSION }}&lt;/version&gt;
        &lt;/dependency&gt;</code></pre>
            </div>

            <div class="artifact">
                <h3>Orchestrate</h3>
                <p>Orchestration library for optimization workflows</p>
                <pre><code>&lt;dependency&gt;
            &lt;groupId&gt;nl.jessenagel.optimization&lt;/groupId&gt;
            &lt;artifactId&gt;orchestrate&lt;/artifactId&gt;
            &lt;version&gt;${{ steps.get_version.outputs.VERSION }}&lt;/version&gt;
        &lt;/dependency&gt;</code></pre>
            </div>

            <h2>Latest Release</h2>
            <p>Version: <strong>${{ steps.get_version.outputs.VERSION }}</strong></p>
            <p>Released: <strong>${{ github.event.release.published_at }}</strong></p>
            
            <hr>
            <p><small>Generated automatically by GitHub Actions</small></p>
        </body>
        </html>
        EOF

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './maven-repo'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Create deployment summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository URL**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifacts deployed**: JHiGHS, Orchestrate" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployment time**: $(date)" >> $GITHUB_STEP_SUMMARY
